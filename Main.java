import java.util.Scanner;

public class Main {
    public static void printCommands() {
        System.out.println("MyFS 1.0 commands:");
        System.out.println("""
                ls <path>           выводит список всех файлов и директорий для `path`
                ls_py <path>        выводит список файлов с расширением `.py` в `path`
                is_dir <path>       выводит `true`, если `path` это директория, в других случаях `false`
                define <path>       выводит `директория` или `файл` в зависимости от типа `path`
                readmod <path>      выводит права для файла в формате `rwx` для текущего пользователя
                setmod <path>       устанавливает права для файла `path`
                cat <path>          выводит контент файла
                append <path>       добавляет строку `# Autogenerated line` в конец `path`
                bc <path>           создает копию `path` в директорию `/tmp/${date}.backup` где, date - это дата в формате `dd-mm-yyyy`
                greplong <path>     выводит самое длинное слово в файле
                help                выводит список команд и их описание
                exit                завершает работу программы""");
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input;
        printCommands();
        do {
            System.out.print("> ");
            input = scanner.nextLine();

            if (input.equals("help")) {
                printCommands();
                continue;
            }

            if (input.startsWith("ls ")) {
                FileSystem.listDirectory(input.substring("ls ".length()));
                continue;
            }

            if (input.startsWith("ls_py ")) {
                FileSystem.listPythonFiles(input.substring("ls_py ".length()));
                continue;
            }

            if (input.startsWith("is_dir ")) {
                FileSystem.isDirectory(input.substring("is_dir ".length()));
                continue;
            }

            if (input.startsWith("define ")) {
                FileSystem.define(input.substring("define ".length()));
                continue;
            }

            if (input.startsWith("readmod ")) {
                FileSystem.printPermissions(input.substring("readmod ".length()));
                continue;
            }

            if (input.startsWith("setmod ")) {
                String[] command = input.substring("setmod ".length()).split(" ");
                if (command.length != 2) {
                    System.err.println("Incorrect syntax. Use: setmod <path> <param> Example: \"setmod /home/user/file.txt rwx\" \"setmod /home/user/file.txt nothing\" ");
                    continue;
                }
                String path = command[0];
                String param = command[1];
                FileSystem.setPermissions(path, param);
                continue;
            }
            if (input.startsWith("cat ")) {
                FileSystem.printContent(input.substring("cat ".length()));
                continue;
            }
            if (input.startsWith("append ")) {
                FileSystem.appendFooter(input.substring("append ".length()));
                continue;
            }
            if (input.startsWith("bc ")) {
                FileSystem.createBackup(input.substring("bc ".length()));
                continue;
            }
            if (input.startsWith("greplong ")) {
                FileSystem.grepLong(input.substring("greplong ".length()));
                continue;
            }
            System.err.println("Incorrect command!");

        } while (!input.equals("exit"));
    }
}
